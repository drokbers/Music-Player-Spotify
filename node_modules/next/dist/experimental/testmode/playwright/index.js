// eslint-disable-next-line import/no-extraneous-dependencies
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
0 && (module.exports = {
    test: null,
    default: null
});
function _export(target, all) {
    for(var name in all)Object.defineProperty(target, name, {
        enumerable: true,
        get: all[name]
    });
}
_export(exports, {
    test: function() {
        return test;
    },
    default: function() {
        return _default;
    }
});
0 && __export(require("@playwright/test"));
const _test = _export_star(require("@playwright/test"), exports);
const _nextworkerfixture = require("./next-worker-fixture");
const _nextfixture = require("./next-fixture");
function _export_star(from, to) {
    Object.keys(from).forEach(function(k) {
        if (k !== "default" && !Object.prototype.hasOwnProperty.call(to, k)) {
            Object.defineProperty(to, k, {
                enumerable: true,
                get: function() {
                    return from[k];
                }
            });
        }
    });
    return from;
}
const test = _test.test.extend({
    _nextWorker: [
        // eslint-disable-next-line no-empty-pattern
        async ({}, use)=>{
            await (0, _nextworkerfixture.applyNextWorkerFixture)(use);
        },
        {
            scope: "worker",
            auto: true
        }
    ],
    next: async ({ _nextWorker , page , extraHTTPHeaders  }, use, testInfo)=>{
        await (0, _nextfixture.applyNextFixture)(use, {
            testInfo,
            nextWorker: _nextWorker,
            page,
            extraHTTPHeaders
        });
    }
});
const _default = test;

//# sourceMappingURL=index.js.map